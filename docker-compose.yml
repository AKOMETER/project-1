version: '3.8'

services:
  # Django Service (Backend)
  web:
    build: ./backend
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    environment:
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DJANGO_DEBUG: ${DJANGO_DEBUG}
      DJANGO_ALLOWED_HOSTS: ${DJANGO_ALLOWED_HOSTS}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_HOST: db
      DB_PORT: ${DB_PORT}
    depends_on:
      - db
      - redis
    env_file:
      - ./backend/.env

  # MySQL Database Service
  db:
    image: mysql:5.7
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - ./backend/.env

  # Redis Service (for Celery)
  redis:
    image: "redis:alpine"
    restart: always
    ports:
      - "6379:6379"

  # Celery Service
  celery:
    build: ./backend
    command: celery -A whatsapp_back worker --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - redis
    env_file:
      - ./backend/.env

  # Celery Beat Service (for periodic tasks)
  celery-beat:
    build: ./backend
    command: celery -A whatsapp_back beat --loglevel=info
    volumes:
      - ./backend:/app
    depends_on:
      - redis
    env_file:
      - ./backend/.env

  # Frontend Service (React or any other)
  frontend:
    build: ./frontend  # Assuming you have a Dockerfile in the 'frontend' folder
    command: npm start
    volumes:
      - ./frontend:/app
    ports:
      - "3000:3000"  # Frontend usually runs on port 3000 for React
    environment:
      NODE_ENV: development
    depends_on:
      - web  # Ensure backend is available before frontend

volumes:
  mysql_data:
